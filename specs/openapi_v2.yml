components:
  responses:
    200OK:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SimpleMessage'
      description: OK
    CheckExecutionOrderCreated:
      content:
        application/json:
          example:
            checkExecutionId: 87393c4e-4eeb-418a-86ad-51b501f83446
          schema:
            $ref: '#/components/schemas/AcceptedCheckExecutionOrder'
      description: Check execution order created.
    CheckExecutionResultResponse:
      content:
        application/json:
          example:
            _class: io.jenkins.plugins.analysis.core.restapi.ReportApi
            issues:
              - description: Generated message from ecu.test to open the affected Package
                directory: <Absolute path to the workspace>/Packages
                fileName: Package.pkg
                message: The message from the check
                packageName: Packages
                severity: ERROR
            size: 1
          schema:
            $ref: '#/components/schemas/CheckReport'
      description: Result of an package or project check in [WarningsNG supported
        format](https://github.com/jenkinsci/warnings-ng-plugin/blob/master/doc/Documentation.md#export-your-issues-into-a-supported-format)
    CheckExecutionStatusOverview:
      content:
        application/json:
          example:
            - checkExecutionId: 4013d7ee-b713-431e-b7a7-19202701cdff
              filePath: Package.pkg
              status: FINISHED
            - checkExecutionId: 1c3fa6a2-e7b1-4560-9186-4579018ecadd
              filePath: Project.prj
              status: WAITING
          schema:
            items:
              $ref: '#/components/schemas/CheckExecutionStatus'
            type: array
      description: List of check execution orders and their status.
    CheckExecutionStatusResponse:
      content:
        application/json:
          example:
            checkExecutionId: 4013d7ee-b713-431e-b7a7-19202701cdff
            filePath: Package.pkg
            status: FINISHED
          schema:
            $ref: '#/components/schemas/CheckExecutionStatus'
      description: Status of a check execution order.
  schemas:
    AcceptedCheckExecutionOrder:
      description: Information about the created check execution order.
      properties:
        checkExecutionId:
          type: string
      type: object
    AdditionalSettings:
      description: Additional information or settings for the execution.
      properties:
        analysisExecutionMode:
          default: sequential
          description: |-
            The analysis execution mode determines how analyses in projects and packages are executed. Valid values are:
            * sequential: Analyses are executed in one process (default).
            * parallel: Analyses are executed in parallel processes (only available for projects).
            * none: Analyses are not executed at all.
            * downstream: Analyses are not executed immediately, but analysis tasks are created in test.guide, which triggers a downstream analysis. (test.guide has to be configured appropriately in ecu.test for this mode.)
            * downstream_no_upload: Analyses are not executed, but .ajob.json files are created. These files can be used to trigger analyses via REST-API.
          enum:
            - sequential
            - parallel
            - none
            - downstream
            - downstream_no_upload
          type: string
        analysisName:
          default: ''
          description: Name of the analysis to be executed. Will only be considered
            if the test case file is a package.
          type: string
        mapping:
          default: ''
          description: For internal use only.
          type: string
        packageParameters:
          description: Parameters for package execution. Will only be considered if
            the test case file is a package.
          example:
            - label: scenarioName
              value: '''LaneChange'''
            - label: laneNumber
              value: '1'
          items:
            $ref: '#/components/schemas/LabeledValue'
          type: array
        recordings:
          description: Recordings for analysis execution. Will only be considered
            for analysis execution.
          items:
            $ref: '#/components/schemas/Recording'
          type: array
      type: object
    ApplySettingsOrder:
      description: An order to reload program settings from their respective files.
      properties:
        settingNames:
          description: The names of the settings to be reloaded.
          items:
            enum:
              - directories
              - manifest
            type: string
          type: array
      required:
        - settingNames
      type: object
    CheckExecutionOrder:
      description: An order to execute checks on a package or project..
      properties:
        filePath:
          description: The path to the package or project that should be checked.
          type: string
      required:
        - filePath
      type: object
    CheckExecutionStatus:
      description: Information about the check execution order.
      properties:
        checkExecutionId:
          description: ID of the check execution order.
          type: string
        filePath:
          description: The path to the package or project.
          type: string
        status:
          description: Status of the execution (WAITING, RUNNING, FINISHED, ERROR)
          type: string
      type: object
    CheckFinding:
      properties:
        description:
          type: string
        directory:
          type: string
        fileName:
          type: string
        message:
          type: string
        packageName:
          type: string
        severity:
          type: string
      type: object
    CheckReport:
      properties:
        _class:
          type: string
        issues:
          items:
            $ref: '#/components/schemas/CheckFinding'
          type: array
        size:
          type: integer
      type: object
    Configuration:
      description: Represents the sum of all information ecu.test needs and provides
        for a configuration change.
      properties:
        order:
          $ref: '#/components/schemas/ConfigurationOrder'
        status:
          $ref: '#/components/schemas/ConfigurationStatus'
      required:
        - status
        - order
      type: object
    ConfigurationOrder:
      description: An order to start, stop or load a configuration.
      properties:
        action:
          description: |-
            Valid values are:
            * Start: The configuration is started or changed. No additional Load step necessary.
            * Stop: The configuration is stopped.
            * Load: The configuration is loaded.
          enum:
            - Start
            - Stop
            - Load
          type: string
        constants:
          $ref: '#/components/schemas/Constants'
        tbc:
          $ref: '#/components/schemas/TestbenchConfiguration'
        tcf:
          $ref: '#/components/schemas/TestConfiguration'
      required:
        - action
      type: object
    ConfigurationStatus:
      description: The status of the current configuration change.
      properties:
        key:
          description: The current status identifier.
          enum:
            - FINISHED
            - RUNNING
            - ERROR
            - WAITING
          type: string
        message:
          description: Contains a (error) message if something goes wrong.
          type: string
      required:
        - message
        - key
    Constants:
      description: Add new global constants or overwrite the value of existing global
        constants.
      example:
        - label: SW_VERSION
          value: '2.0'
        - label: NEEDED_FILE
          value: '''/Path/to a/File'''
      items:
        $ref: '#/components/schemas/LabeledValue'
      type: array
    Execution:
      description: Represents the sum of all information ecu.test needs and provides
        for a certain test execution.
      properties:
        order:
          $ref: '#/components/schemas/ExecutionOrder'
        result:
          $ref: '#/components/schemas/ReportInfo'
        status:
          $ref: '#/components/schemas/ExecutionStatus'
      required:
        - status
        - order
      type: object
    ExecutionOrder:
      description: An order to execute a new test run.
      properties:
        additionalSettings:
          $ref: '#/components/schemas/AdditionalSettings'
        constants:
          description: Add new global constants or overwrite the value of existing
            global constants.
          example:
            - label: SW_VERSION
              value: '2.0'
            - label: NEEDED_FILE
              value: '''/Path/to a/File'''
          items:
            $ref: '#/components/schemas/LabeledValue'
          type: array
        executionId:
          default: ''
          description: An optional ID that can be used to identify the currently active
            test execution.
          type: string
        testCasePath:
          description: The path to the test case file that should be started. A test
            case file can be a package, project, project archive or analysis job.
            The path must either be an absolute path or a relative path to the Packages
            directory in the workspace.
          type: string
      required:
        - testCasePath
      type: object
    ExecutionStatus:
      description: The status of the current execution.
      properties:
        key:
          description: The current status identifier. The ERROR state refers to a
            hard error that prevented the execution from finishing and is not coupled
            to the report verdict.
          enum:
            - WAITING
            - RUNNING
            - FINISHED
            - ABORTED
            - ERROR
          type: string
        message:
          description: Contains a (error) message if something goes wrong.
          type: string
        userData:
          additionalProperties: true
          type: object
      required:
        - message
        - key
    IsIdle:
      properties:
        isIdle:
          type: boolean
      type: object
    LabeledValue:
      description: Just a value and a representing label.
      properties:
        label:
          description: Name of the value
          type: string
        value:
          description: 'Expression to be evaluated, e.g.: "Some string", or 123'
          type: string
      required:
        - label
        - value
      type: object
    License:
      properties:
        identifier:
          description: The license identifier, e.g. the dongle number for dongle licenses
          type: string
        options:
          description: Additional available license options.
          items:
            type: string
          type: array
        type:
          description: The license type.
          enum:
            - NO_LICENSE
            - DONGLE
            - FLOATING
          type: string
        validUntil:
          description: Expiration date of the license.
          type: string
        validUpToVersion:
          description: Maximum product version the license can be used for.
          type: string
      type: object
    Recording:
      description: A signal recording.
      properties:
        deltaT:
          description: Optional deltaT. Required if the recordings are to be synchronized
            before the analysis. deltaT is the time shift applied to all timestamps
            of the recording.
          type: number
        deviceName:
          description: Optional device name. Required if the recording contains multiple
            devices and the mapping between device names in the test configuration
            and device names in the recording cannot be realized by format details.
            See "Supported file formats" in ecu.test help for more information.
          type: string
        formatDetails:
          description: Optional format details. Required if the recording cannot be
            interpreted with default format details. See "Supported file formats"
            in ecu.test help for more information.
          type: string
        mappingNames:
          description: Names of the mapping items included in this recording. Only
            required for analysis packages unless there is only one recording (not
            used for packages).
          items:
            type: string
          type: array
        path:
          description: The path must either be an absolute path or a relative path
            to the Traces directory in the workspace.
          type: string
        recordingGroup:
          description: Name of the recording group the recording is to be assigned
            to. Only required for packages unless there is only one recording group
            (not used for analysis packages).
          type: string
        recordingNumber:
          default: 0
          description: Optional recording number. Required for unique identification
            of recordings in special file formats like MDF ETAS.
          type: integer
        startTime:
          description: Optional start time. Can be used to restrict analyses to a
            part of the recordings (instead of the whole recording).
          type: number
        stopTime:
          description: Optional stop time. Can be used to restrict analyses to a part
            of the recordings (instead of the whole recording).
          type: number
      required:
        - path
      type: object
    ReportGeneration:
      description: Represents the sum of all information ecu.test needs and provides
        for a certain test report generation via a report generator.
      properties:
        order:
          $ref: '#/components/schemas/ReportGenerationOrder'
        result:
          $ref: '#/components/schemas/ReportGenerationResult'
        status:
          $ref: '#/components/schemas/ReportGenerationStatus'
      required:
        - status
        - order
      type: object
    ReportGenerationOrder:
      description: An order to generate a report with a specific report generator.
      properties:
        additionalSettings:
          additionalProperties:
            type: string
          description: Key-value pairs containing optional settings passed to the
            report generator.
          type: object
        generatorName:
          description: The name of the report generator to trigger, e.g. HTML
          type: string
      required:
        - generatorName
      type: object
    ReportGenerationResult:
      description: Report generator result.
      properties:
        outputDir:
          description: Directory of the generated report.
          type: string
      type: object
    ReportGenerationStatus:
      description: The current generation status of a triggered report generator.
      properties:
        key:
          description: The current status identifier.
          enum:
            - WAITING
            - RUNNING
            - FINISHED
            - ERROR
          type: string
        message:
          description: Contains a (error) message if something goes wrong.
          type: string
      required:
        - message
        - key
      type: object
    ReportInfo:
      description: Information about a test report.
      properties:
        reportDir:
          description: Directory for test report, log files and recordings.
          type: string
        result:
          description: Result of the execution.
          type: string
        subReportIds:
          items:
            type: string
          type: array
        testReportId:
          description: A unique identifier for the test report.
          type: string
      required:
        - testReportId
        - reportDir
        - result
      type: object
    SimpleMessage:
      properties:
        message:
          default: ''
          type: string
      type: object
    TGUpload:
      description: Represents the sum of all information ecu.test needs and provides
        for a certain test report upload to test.guide.
      properties:
        order:
          $ref: '#/components/schemas/TGUploadOrder'
        result:
          $ref: '#/components/schemas/TGUploadResult'
        status:
          $ref: '#/components/schemas/TGUploadStatus'
      required:
        - status
        - order
        - result
      type: object
    TGUploadOrder:
      description: An order to execute a test.guide upload.
      properties:
        additionalSettings:
          additionalProperties:
            type: string
          description: Key-value pairs containing optional settings for the test.guide
            upload. Equivalent to ecu.test -> Settings -> test.guide -> ATX Generator
            default settings.
          type: object
        authKey:
          default: ''
          description: API authentification key. Needed if authentification is switched
            on in test.guide.
          type: string
        projectId:
          default: 0
          description: The test.guide project ID to upload to.
          type: integer
        testGuideUrl:
          description: The URL to the test.guide instance to connect to, e.g. https://myTestGuideHost:1234
          type: string
        useSettingsFromServer:
          default: false
          description: Get and use upload settings from test.guide.
          type: boolean
      required:
        - testGuideUrl
      type: object
    TGUploadResult:
      description: The result of a triggered test.guide upload.
      properties:
        link:
          description: Link to the uploaded test.guide report.
          type: string
      required:
        - link
      type: object
    TGUploadStatus:
      description: The current upload status of a triggered test.guide upload.
      properties:
        key:
          description: The current status identifier.
          enum:
            - WAITING
            - RUNNING
            - FINISHED
            - ERROR
          type: string
        message:
          description: Contains a (error) message if something goes wrong.
          type: string
      required:
        - message
        - key
      type: object
    TestConfiguration:
      description: A test configuration.
      properties:
        tcfPath:
          default: ''
          description: Absolute path or relative path of the .tcf file in the Configurations
            directory.
          type: string
      type: object
    TestbenchConfiguration:
      description: A testbench configuration.
      properties:
        tbcPath:
          default: ''
          description: Absolute path or relative path of the .tbc file in the Configurations
            directory.
          type: string
      type: object
info:
  contact:
    email: support@tracetronic.com
  description: '**ecu.test** is a test automation software for the validation of embedded
    systems in automotive environments developed by tracetronic GmbH. This software
    executes regression tests which are essential for validating complex technical
    products such as electronic control units (ECUs). It supports standardized access
    to a broad range of test tools and provides an extensive automation of distributed
    test environments. The API reference for the ecu.test Core **enables the execution**
    of ecu.test packages, projects and analysis jobs with their respective configurations.'
  license:
    name: MIT License
    url: https://spdx.org/licenses/MIT.html
  title: ecu.test REST-API V2
  version: 2.4.1
openapi: 3.0.3
paths:
  /checks/executions:
    get:
      operationId: GetCheckExecutionStatusOverview
      responses:
        '200':
          $ref: '#/components/responses/CheckExecutionStatusOverview'
      summary: Get an overview of all check execution orders.
      tags:
        - checks
    post:
      operationId: CreateCheckExecutionOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckExecutionOrder'
      responses:
        '201':
          $ref: '#/components/responses/CheckExecutionOrderCreated'
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: Check could not be triggered because ecu.test is not idle.
            Try again later.
      summary: Create a check execution order.
      tags:
        - checks
  /checks/executions/{checkExecutionId}:
    delete:
      operationId: DeleteCheckExecutionOrder
      parameters:
        - description: ID of check execution given while creation of the order.
          in: path
          name: checkExecutionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: All information removed.
        '404':
          description: No check execution order found.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: Check execution order can not be deleted.
      summary: Delete all information about the check execution.
      tags:
        - checks
    get:
      operationId: GetCheckExecutionStatus
      parameters:
        - description: ID of check execution given while creation of the order.
          in: path
          name: checkExecutionId
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/CheckExecutionStatusResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: No check execution found.
      summary: Get information about the status of the check execution order.
      tags:
        - checks
  /checks/executions/{checkExecutionId}/result:
    get:
      operationId: GetCheckResult
      parameters:
        - description: ID of check execution given while creation of the order.
          in: path
          name: checkExecutionId
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/CheckExecutionResultResponse'
        '400':
          description: Check execution is not finished yet.
        '404':
          description: No check execution found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: Error occured while executing check order.
      summary: Get the result of the check execution.
      tags:
        - checks
  /configuration:
    get:
      description: Returns the current configuration change order.
      operationId: GetLastConfigurationOrder
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
          description: Successfully queried information about the current configuration
            change order.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: No order to change the configuration was found.
      summary: Get information about the current configuration change.
      tags:
        - configuration
    put:
      description: Creates an order to start or stop the test configuration (tcf),
        test bench configuration (tbc) and/or set/unset constants. A tcf and/or tbc
        can also just be loaded. <br> <i>When starting a configuration, omitting parameters
        like "constants", "tbc" or "tcf" will result in unloading the respective configuration.</i>
      operationId: ManageConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationOrder'
      responses:
        '200':
          $ref: '#/components/responses/200OK'
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: Configuration/constants change could not be triggered because
            ecu.test is not idle. Try again later.
      summary: Start/stop/load a configuration or set/unset constants.
      tags:
        - configuration
  /execution:
    delete:
      description: Aborts the currently running execution. If no execution runs this
        call has no effect. Report generation will be executed regardless of the execution
        abort.
      operationId: AbortExecution
      responses:
        '200':
          $ref: '#/components/responses/200OK'
      summary: Aborts the currently running execution.
      tags:
        - execution
    get:
      description: If already created, returns the current active execution.
      operationId: GetCurrentExecution
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: Successfully queried information about the current execution.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: No execution has been registered yet.
      summary: Get information about the current execution.
      tags:
        - execution
    put:
      description: Gives ecu.test a new execution to run, if no other execution is
        currently active. Please note that the result will not automatically be uploaded
        to test.guide, even if specified so in the workspace settings.
      operationId: CreateExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionOrder'
      responses:
        '200':
          $ref: '#/components/responses/200OK'
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: Test execution could not be triggered because ecu.test is not
            idle. Try again later.
      summary: Creates a new execution to run.
      tags:
        - execution
  /info/license:
    get:
      description: Returns information about the used license.
      operationId: GetLicenseInfo
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
          description: OK
      summary: Returns information about the used license.
      tags:
        - info
  /isIdle:
    get:
      description: Is ecu.test in an idle state so that a new execution can be triggered?
      operationId: EcutestIsIdle
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsIdle'
          description: OK
      summary: Check to see if ecu.test is in an idle state.
      tags:
        - status
  /live:
    get:
      description: A simple endpoint that can be used to check if the API is reachable.
      operationId: IsAlive
      responses:
        '200':
          $ref: '#/components/responses/200OK'
      summary: Simple alive ping
      tags:
        - status
  /reports:
    get:
      description: Gives information about all test reports currently available in
        the ecu.test report directory.
      operationId: GetAllReports
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReportInfo'
                type: array
          description: Information about all available test reports.
      summary: Get information about all available test reports.
      tags:
        - report
  /reports/{reportId}:
    get:
      description: Gives information about a specific test report.
      operationId: GetReport
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportInfo'
          description: Information about the test report with the given id.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: No report with the given ID exists in the ecu.test report directory.
      summary: Get information about test report with id reportId.
      tags:
        - report
  /reports/{reportId}/download:
    get:
      description: Downloads the report folder for the report with id reportId as
        a zip file.
      operationId: ReportDownload
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Successfully created zip file and provided for download.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: No report with the given ID exists in the ecu.test report directory.
      summary: Downloads the report folder for the report with id reportId as a zip
        file.
      tags:
        - report
  /reports/{reportId}/generate:
    get:
      description: Get information about the report generator status.
      operationId: GetCurrentReportGeneration
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportGeneration'
          description: Successfully queried information about the report generator
            status.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: No report generator has been triggered yet.
      summary: Get information about the report generator status.
      tags:
        - report
    put:
      description: Triggers a report generator.
      operationId: CreateReportGeneration
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportGenerationOrder'
      responses:
        '200':
          $ref: '#/components/responses/200OK'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: No report with the given ID exists in the ecu.test report directory.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: Report generator could not be triggered because ecu.test is
            not idle. Try again later.
      summary: Triggers a report generator.
      tags:
        - report
  /reports/{reportId}/upload:
    get:
      description: Get information about the upload status to test.guide.
      operationId: GetCurrentUpload
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TGUpload'
          description: Successfully queried information about the test.guide upload
            status.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: No upload has been triggered yet.
      summary: Get information about the upload status to test.guide.
      tags:
        - report
    put:
      description: Triggers the upload of the given report to test.guide.
      operationId: CreateUpload
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TGUploadOrder'
      responses:
        '200':
          $ref: '#/components/responses/200OK'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: No report with the given ID exists in the ecu.test report directory.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: Report upload could not be triggered because ecu.test is not
            idle. Try again later.
      summary: Uploads a report to test.guide.
      tags:
        - report
  /settings/reload:
    put:
      description: Triggers jobs for reloading the program settings with the specified
        names.
      operationId: CreateReloadSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplySettingsOrder'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: Reload jobs for the specified settings were triggered.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessage'
          description: Reload jobs for the specified settings could not be triggered
            because ecu.test is not idle. Try again later.
      summary: Reload program settings.
      tags:
        - settings
servers:
  - url: /api/v2
tags:
  - description: Endpoints related to run and view package/project checks
    name: checks
  - description: Endpoints related to changing the test configuration or test bench
      configuration.
    name: configuration
  - description: Endpoints to show or manipulate the current test execution.
    name: execution
  - description: Endpoints related to test report operations.
    name: report
  - description: Endpoints related to status information.
    name: status
  - description: Endpoints to manipulate program settings.
    name: settings
